#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gui_project1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="passwordmanager")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpassword_detail(password_detail instance);
    partial void Updatepassword_detail(password_detail instance);
    partial void Deletepassword_detail(password_detail instance);
    partial void Insertuser_detail(user_detail instance);
    partial void Updateuser_detail(user_detail instance);
    partial void Deleteuser_detail(user_detail instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::gui_project1.Properties.Settings.Default.passwordmanagerConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<password_detail> password_details
		{
			get
			{
				return this.GetTable<password_detail>();
			}
		}
		
		public System.Data.Linq.Table<user_detail> user_details
		{
			get
			{
				return this.GetTable<user_detail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.password_detail")]
	public partial class password_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _psid;
		
		private string _master;
		
		private string _name;
		
		private string _username;
		
		private string _email;
		
		private string _website;
		
		private string _password;
		
		private string _note;
		
		private System.DateTime _datecreted;
		
		private System.DateTime _datemodified;
		
		private EntityRef<user_detail> _user_detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpsidChanging(int value);
    partial void OnpsidChanged();
    partial void OnmasterChanging(string value);
    partial void OnmasterChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OndatecretedChanging(System.DateTime value);
    partial void OndatecretedChanged();
    partial void OndatemodifiedChanging(System.DateTime value);
    partial void OndatemodifiedChanged();
    #endregion
		
		public password_detail()
		{
			this._user_detail = default(EntityRef<user_detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_psid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int psid
		{
			get
			{
				return this._psid;
			}
			set
			{
				if ((this._psid != value))
				{
					this.OnpsidChanging(value);
					this.SendPropertyChanging();
					this._psid = value;
					this.SendPropertyChanged("psid");
					this.OnpsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_master", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string master
		{
			get
			{
				return this._master;
			}
			set
			{
				if ((this._master != value))
				{
					if (this._user_detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmasterChanging(value);
					this.SendPropertyChanging();
					this._master = value;
					this.SendPropertyChanged("master");
					this.OnmasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="NChar(250) NOT NULL", CanBeNull=false)]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NChar(500) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datecreted", DbType="DateTime NOT NULL")]
		public System.DateTime datecreted
		{
			get
			{
				return this._datecreted;
			}
			set
			{
				if ((this._datecreted != value))
				{
					this.OndatecretedChanging(value);
					this.SendPropertyChanging();
					this._datecreted = value;
					this.SendPropertyChanged("datecreted");
					this.OndatecretedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datemodified", DbType="DateTime NOT NULL")]
		public System.DateTime datemodified
		{
			get
			{
				return this._datemodified;
			}
			set
			{
				if ((this._datemodified != value))
				{
					this.OndatemodifiedChanging(value);
					this.SendPropertyChanging();
					this._datemodified = value;
					this.SendPropertyChanged("datemodified");
					this.OndatemodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_password_detail", Storage="_user_detail", ThisKey="master", OtherKey="master", IsForeignKey=true)]
		public user_detail user_detail
		{
			get
			{
				return this._user_detail.Entity;
			}
			set
			{
				user_detail previousValue = this._user_detail.Entity;
				if (((previousValue != value) 
							|| (this._user_detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user_detail.Entity = null;
						previousValue.password_details.Remove(this);
					}
					this._user_detail.Entity = value;
					if ((value != null))
					{
						value.password_details.Add(this);
						this._master = value.master;
					}
					else
					{
						this._master = default(string);
					}
					this.SendPropertyChanged("user_detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_details")]
	public partial class user_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _username;
		
		private string _email;
		
		private string _master;
		
		private EntitySet<password_detail> _password_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmasterChanging(string value);
    partial void OnmasterChanged();
    #endregion
		
		public user_detail()
		{
			this._password_details = new EntitySet<password_detail>(new Action<password_detail>(this.attach_password_details), new Action<password_detail>(this.detach_password_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_master", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string master
		{
			get
			{
				return this._master;
			}
			set
			{
				if ((this._master != value))
				{
					this.OnmasterChanging(value);
					this.SendPropertyChanging();
					this._master = value;
					this.SendPropertyChanged("master");
					this.OnmasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_detail_password_detail", Storage="_password_details", ThisKey="master", OtherKey="master")]
		public EntitySet<password_detail> password_details
		{
			get
			{
				return this._password_details;
			}
			set
			{
				this._password_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_password_details(password_detail entity)
		{
			this.SendPropertyChanging();
			entity.user_detail = this;
		}
		
		private void detach_password_details(password_detail entity)
		{
			this.SendPropertyChanging();
			entity.user_detail = null;
		}
	}
}
#pragma warning restore 1591
